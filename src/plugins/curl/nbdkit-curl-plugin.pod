=encoding utf8

=head1 NAME

nbdkit-curl-plugin - nbdkit curl plugin (HTTP, FTP, SSH and other protocols)

=head1 SYNOPSIS

 nbdkit -r curl url=http://example.com/disk.img

 nbdkit -r curl url=sftp://you@example.com/~/disk.img

=head1 DESCRIPTION

C<nbdkit-curl-plugin> is a plugin for L<nbdkit(1)> which turns content
served over HTTP, FTP, SSH, and more, into a Network Block Device.  It
uses a library called libcurl (also known as cURL) to read data from
URLs.  The exact list of protocols that libcurl can handle depends on
how it was compiled, but most versions will handle HTTP, HTTPS, FTP,
FTPS and SFTP (see: S<C<curl -V>>).  For more information about
libcurl, see L<http://curl.haxx.se>.

B<Note:> This plugin supports writes.  However:

=over 4

=item *

For HTTP, you may not want nbdkit to issue PUT requests to the remote server
(which probably doesn't understand them).

=item *

SFTP helpfully truncates the target file when you open it for writing.
Not useful!

=back

B<To force nbdkit to use a readonly connection, pass the I<-r> flag>.

=head2 EXAMPLES

=head3 Basic usage

 nbdkit -r curl url=http://example.com/disk.img

which serves the remote disk image as a NBD on TCP port 10809 (to
control ports and protocols used to serve NBD see L<nbdkit(1)>).

=head3 Accessing SSH servers

You can also access SSH servers.  This uses the SFTP protocol which is
built into most SSH servers:

 nbdkit -r curl url=sftp://example.com/~/disk.img

You may need to specify a username and/or a password.  In this example
the password is read from stdin:

 nbdkit -r curl url=sftp://example.com/~/disk.img username=fred password=-

=head1 PARAMETERS

=over 4

=item B<password=PASSWORD>

Set the password to use when connecting to the remote server.

Note that passing this on the command line is not secure on shared
machines.

=item B<password=->

Ask for the password (interactively) when nbdkit starts up.

=item B<password=+FILENAME>

Read the password from the named file.  This is the most secure method
to supply a password, as long as you set the permissions on the file
appropriately.

=item B<sslverify=0>

Don't verify the SSL certificate of the remote host.

=item B<timeout=SECS>

Set the timeout for requests.

=item B<timeout=0>

Use the default libcurl timeout for requests.

=item B<url=URL>

The URL of the remote disk image.  This is passed to libcurl directly
via L<curl_easy_setopt(3)/CURLOPT_URL>.

This parameter is required.

=item B<user=USERNAME>

Set the username to use when connecting to the remote server.  This
may also be set in the URL (eg. C<http://foo@example.com/disk.img>)

=back

=head1 SEE ALSO

L<curl(1)>,
L<libcurl(3)>,
L<nbdkit(1)>,
L<nbdkit-plugin(3)>.

=head1 AUTHORS

Richard W.M. Jones

Parts derived from Alexander Graf's "QEMU Block driver for CURL images".

=head1 COPYRIGHT

Copyright (C) 2014 Red Hat Inc.

=head1 LICENSE

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

=over 4

=item *

Redistributions of source code must retain the above copyright
notice, this list of conditions and the following disclaimer.

=item *

Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.

=item *

Neither the name of Red Hat nor the names of its contributors may be
used to endorse or promote products derived from this software without
specific prior written permission.

=back

THIS SOFTWARE IS PROVIDED BY RED HAT AND CONTRIBUTORS ''AS IS'' AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL RED HAT OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
